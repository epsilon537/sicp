#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1648 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 12 #"racket/trace"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Exercise"
0 0 17 3 1 #" "
0 0 17 3 5 #"3.31:"
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 8 #"internal"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 24 #"accept-action-procedure!"
0 0 17 3 7 #" define"
0 0 17 3 1 #"d"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 9 #"make-wire"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";specifies"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 4 #"when"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 6 #"action"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"added"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"wire"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 3 #" is"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";immediately"
0 0 17 3 1 #" "
0 0 17 3 4 #"run."
0 0 17 3 1 #" "
0 0 17 3 7 #"Explain"
0 0 17 3 1 #" "
0 0 17 3 3 #"why"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 14 #"initialization"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 10 #"necessary."
0 0 17 3 1 #" "
0 0 17 3 2 #"In"
0 0 17 3 1 #" "
0 0 17 3 10 #"particular"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"trace"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";through"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"half-adder"
0 0 17 3 1 #" "
0 0 17 3 7 #"example"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"paragraphs"
0 0 17 3 1 #" "
0 0 17 3 5 #"above"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"say"
0 0 17 3 1 #" "
0 0 17 3 3 #"how"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"system\342\200\231s"
0 0 17 3 1 #" "
0 0 17 3 8 #"response"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";would"
0 0 17 3 1 #" "
0 0 17 3 6 #"differ"
0 0 17 3 1 #" "
0 0 17 3 2 #"if"
0 0 17 3 1 #" "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 3 #"had"
0 0 17 3 7 #" define"
0 0 17 3 1 #"d"
0 0 17 3 1 #" "
0 0 17 3 27 #"accept-action-procedure! as"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";(define"
0 0 17 3 2 #" ("
0 0 17 3 24 #"accept-action-procedure!"
0 0 17 3 6 #" proc)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 4 #"set!"
0 0 17 3 19 #" action-procedures "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";        ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 4 #"proc"
0 0 17 3 21 #" action-procedures)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-agenda"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"empty-agenda?"
0 0 24 3 1 #" "
0 0 14 3 6 #"agenda"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"first-agenda-item"
0 0 24 3 1 #" "
0 0 14 3 6 #"agenda"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"remove-first-agenda-item!"
0 0 24 3 1 #" "
0 0 14 3 6 #"agenda"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"add-to-agenda!"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 6 #"action"
0 0 24 3 1 #" "
0 0 14 3 6 #"agenda"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-time"
0 0 24 3 1 #" "
0 0 14 3 6 #"agenda"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"call-each"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 4 #"done"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"call-each"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 4 #"wire"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"wire"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"get-signal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 4 #"wire"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 4 #"wire"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"set-signal!"
0 0 24 3 2 #") "
0 0 14 3 9 #"new-value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 4 #"wire"
0 0 24 3 1 #" "
0 0 14 3 16 #"action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 4 #"wire"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"add-action!"
0 0 24 3 2 #") "
0 0 14 3 16 #"action-procedure"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 12 #"signal-value"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 17 #"action-procedures"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"set-my-signal!"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 12 #"signal-value"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"signal-value"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"call-each"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 17 #"action-procedures"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 14 3 4 #"done"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"accept-action-procedure!"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"action-procedures"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 17 #"action-procedures"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 8 #";(define"
0 0 17 3 2 #" ("
0 0 17 3 24 #"accept-action-procedure!"
0 0 17 3 1 #" "
0 0 17 3 5 #"proc)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 4 #";  ("
0 0 17 3 4 #"set!"
0 0 17 3 1 #" "
0 0 17 3 18 #"action-procedures "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 10 #";        ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 4 #"proc"
0 0 17 3 1 #" "
0 0 17 3 19 #"action-procedures))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 4 #";  ("
0 0 17 3 6 #"proc))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"get-signal"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 12 #"signal-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"set-signal!"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 14 #"set-my-signal!"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"add-action!"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 24 #"accept-action-procedure!"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Unknown"
0 0 19 3 1 #" "
0 0 19 3 10 #"operation:"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 30 #"                          WIRE"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"dispatch"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"after-delay"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 14 3 6 #"action"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"add-to-agenda!"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 15 3 5 #"delay"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-time"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 6 #"action"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"the-agend"
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"propagate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"empty-agenda?"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 4 #"done"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"first-item"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"first-agenda-item"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"first-item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 25 #"remove-first-agenda-item!"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"propagate"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"probe"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"wire"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"wire"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 2 #"\" "
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-time"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"  "
0 0 19 3 9 #"New-value"
0 0 19 3 1 #" "
0 0 19 3 2 #"= "
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 4 #"wire"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"the-agenda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-agenda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"inverter-delay"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"and-gate-delay"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"or-gate-delay"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"logical-or"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Invalid"
0 0 19 3 7 #" signal"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Invalid"
0 0 19 3 7 #" signal"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"or-gate"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"or-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 9 #"new-value"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"logical-or"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"after-delay"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 13 #"or-gate-delay"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 1 #" "
0 0 14 3 19 #"or-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 19 #"or-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"logical-and"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Invalid signal\""
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"Invalid signal\""
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"and-gate"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"and-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 9 #"new-value"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"logical-and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"after-delay"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 14 #"and-gate-delay"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 2 #"a1"
0 0 24 3 1 #" "
0 0 14 3 20 #"and-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 20 #"and-action-procedure"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"inverter"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invert-input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 9 #"new-value"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"logical-not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-signal"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"after-delay"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 14 #"inverter-delay"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-value"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-action!"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 12 #"invert-input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"logical-not"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Invalid"
0 0 19 3 1 #" "
0 0 19 3 7 #"signal\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"trace-define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"half-adder"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"or-gate"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"and-gate"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"inverter"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"and-gate"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"sum"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"carry"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-wire"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"probe"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"sum"
0 0 24 3 1 #" "
0 0 14 3 3 #"sum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"probe"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"carry"
0 0 24 3 1 #" "
0 0 14 3 5 #"carry"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"invoking half-adder\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"half-adder"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-1"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-2"
0 0 24 3 1 #" "
0 0 14 3 3 #"sum"
0 0 24 3 1 #" "
0 0 14 3 5 #"carry"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"half-addr invoked done.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"propagate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"set-signal!"
0 0 24 3 1 #" "
0 0 14 3 7 #"input-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"propagate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";A: All the after-delay invokations are inside the "
0 0 17 3 26 #"action procedures. If the "
0 0 17 3 7 #"action "
0 0 17 3 20 #"procedure would not "
0 0 17 3 4 #"get "
0 0 17 3 29 #"called right away, the output"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ports"
0 0 17 3 1 #"'"
0 0 17 3 1 #" "
0 0 17 3 12 #"set-signal!s"
0 0 17 3 1 #" "
0 0 17 3 5 #"would"
0 0 17 3 1 #" "
0 0 17 3 5 #"never"
0 0 17 3 1 #" "
0 0 17 3 3 #"get"
0 0 17 3 1 #" "
0 0 17 3 10 #"scheduled."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 7 #"initial"
0 0 17 3 1 #" "
0 0 17 3 5 #"input"
0 0 17 3 1 #" "
0 0 17 3 6 #"signal"
0 0 17 3 1 #" "
0 0 17 3 6 #"values"
0 0 17 3 1 #" "
0 0 17 3 5 #"would"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 9 #"propagate"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"output."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"output"
0 0 17 3 1 #" "
0 0 17 3 5 #"would"
0 0 17 3 1 #" "
0 0 17 3 4 #"stay"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";at"
0 0 17 3 6 #" zero."
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";With"
0 0 17 3 1 #" "
0 0 17 3 8 #"original"
0 0 17 3 1 #" "
0 0 17 3 4 #"code"
0 0 17 3 2 #" ("
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 14 #"initialization"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 1 #"D"
0 0 17 3 1 #","
0 0 17 3 1 #"E"
0 0 17 3 1 #","
0 0 17 3 1 #"S"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"C"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 10 #"half-adder"
0 0 17 3 1 #" "
0 0 17 3 8 #"diagram)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=0"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=0"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2:"
0 0 17 3 5 #" E->1"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";3:"
0 0 17 3 1 #" "
0 0 17 3 4 #"C->0"
0 0 17 3 1 #","
0 0 17 3 5 #" S->0"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 5 #" D->0"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"set-signal!"
0 0 17 3 1 #" "
0 0 17 3 3 #"in1"
0 0 17 3 1 #" "
0 0 17 3 2 #"1)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=2"
0 0 17 3 1 #","
0 0 17 3 3 #"D=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2:"
0 0 17 3 5 #" E->1"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";3:"
0 0 17 3 1 #" "
0 0 17 3 4 #"C->0"
0 0 17 3 1 #","
0 0 17 3 5 #" S->0"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 1 #" "
0 0 17 3 4 #"D->0"
0 0 17 3 1 #","
0 0 17 3 5 #" D->1"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 10 #"propagate)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=0"
0 0 17 3 1 #","
0 0 17 3 3 #"E=1"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";3:"
0 0 17 3 1 #" "
0 0 17 3 4 #"C->0"
0 0 17 3 1 #","
0 0 17 3 5 #" S->0"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 1 #" "
0 0 17 3 4 #"D->0"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"D->1"
0 0 17 3 1 #","
0 0 17 3 5 #" S->0"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=1"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 1 #" "
0 0 17 3 4 #"D->0"
0 0 17 3 1 #","
0 0 17 3 4 #"D->1"
0 0 17 3 5 #",S->0"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=1"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";8:"
0 0 17 3 5 #" S->1"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=1"
0 0 17 3 1 #","
0 0 17 3 3 #"S=1"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";/"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";With"
0 0 17 3 1 #" "
0 0 17 3 8 #"modified"
0 0 17 3 1 #" "
0 0 17 3 4 #"code"
0 0 17 3 2 #" ("
0 0 17 3 7 #"without"
0 0 17 3 1 #" "
0 0 17 3 11 #"initializer"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=0"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=0"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 17 3 2 #" /"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"set-signal!"
0 0 17 3 1 #" "
0 0 17 3 3 #"in1"
0 0 17 3 1 #" "
0 0 17 3 2 #"1)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=0"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";3:"
0 0 17 3 5 #" C->0"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 5 #" D->1"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 10 #"propagate)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";5:"
0 0 17 3 5 #" D->1"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";agenda:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";8:"
0 0 17 3 5 #" S->0"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";in1=1"
0 0 17 3 1 #","
0 0 17 3 5 #"in2=0"
0 0 17 3 1 #","
0 0 17 3 3 #"D=1"
0 0 17 3 1 #","
0 0 17 3 3 #"E=0"
0 0 17 3 1 #","
0 0 17 3 3 #"S=0"
0 0 17 3 4 #",C=0"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";agenda:/"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
